# LoRaWAN LED 控制通信协议说明文档

本协议定义了基于 LoRaWAN 的 LED 控制指令规范，终端设备通过解析 `fPort` 和 `payload` 字段实现 LED 的颜色、亮度、闪烁等控制功能。

## 通信概述

- 使用 LoRaWAN 下行数据帧传输控制指令
- `fPort` 用于区分指令类型
- `payload` 为二进制格式数据，终端解析后执行控制
- 支持单个设备控制和组播控制

---

## HTTP接口说明

### 1. 设置亮度
- 请求格式：`GET /equipment/setLevel?DevEUI=<设备EUI>&level=<亮度值>` 或 `GET /equipment/setLevel?ip=<IP地址>&level=<亮度值>`
- 示例：
  - 单个设备：`GET /equipment/setLevel?DevEUI=1100000000000001&level=7000`
  - 组播控制：`GET /equipment/setLevel?ip=192.168.1.1&level=7000`
- 响应格式：
```json
{
    "msg": "设置亮度成功，亮度值：7000，下行ID：[xxx, xxx, xxx]",
    "code": 200
}
```

### 2. 设置频率
- 请求格式：`GET /equipment/setFrequency?DevEUI=<设备EUI>&frequency=<频率值>` 或 `GET /equipment/setFrequency?ip=<IP地址>&frequency=<频率值>`
- 示例：
  - 单个设备：`GET /equipment/setFrequency?DevEUI=1100000000000001&frequency=60`
  - 组播控制：`GET /equipment/setFrequency?ip=192.168.1.1&frequency=60`
- 响应格式：
```json
{
    "msg": "设置频率成功，频率值：60Hz，下行ID：[xxx, xxx, xxx]",
    "code": 200
}
```

### 3. 设置颜色
- 请求格式：`GET /equipment/setColor?DevEUI=<设备EUI>&color=<颜色值>` 或 `GET /equipment/setColor?ip=<IP地址>&color=<颜色值>`
- 示例：
  - 单个设备：`GET /equipment/setColor?DevEUI=1100000000000001&color=0`
  - 组播控制：`GET /equipment/setColor?ip=192.168.1.1&color=0`
- 响应格式：
```json
{
    "msg": "设置颜色成功，颜色：红色，下行ID：[xxx, xxx, xxx]",
    "code": 200
}
```

### 4. 设置闪烁方式
- 请求格式：`GET /equipment/setManner?DevEUI=<设备EUI>&manner=<方式值>` 或 `GET /equipment/setManner?ip=<IP地址>&manner=<方式值>`
- 示例：
  - 单个设备：`GET /equipment/setManner?DevEUI=1100000000000001&manner=0`
  - 组播控制：`GET /equipment/setManner?ip=192.168.1.1&manner=0`
- 响应格式：
```json
{
    "msg": "设置闪烁方式成功，方式：闪烁，下行ID：[xxx, xxx, xxx]",
    "code": 200
}
```

### 5. 设备开关控制
- 请求格式：`GET /equipment/setStatus?DevEUI=<设备EUI>&status=<状态值>` 或 `GET /equipment/setStatus?ip=<IP地址>&status=<状态值>`
- 示例：
  - 单个设备：`GET /equipment/setStatus?DevEUI=1100000000000001&status=0`
  - 组播控制：`GET /equipment/setStatus?ip=192.168.1.1&status=0`
- 响应格式：
```json
{
    "msg": "关闭成功，下行ID：[xxx, xxx, xxx]",
    "code": 200
}
```

## 错误响应
所有接口在参数错误或请求失败时会返回如下格式的响应：
```json
{
    "msg": "错误信息",
    "code": 400
}
```

错误信息包括：
- 缺少设备DevEUI或IP参数
- 未找到IP对应的设备
- 参数格式错误
- 参数值超出范围

---

## fPort 分配

| fPort | 功能描述                                               |
|-------|--------------------------------------------------------|
| 10    | 设置 LED 闪烁频率（30Hz / 60Hz / 120Hz）               |
| 11    | 设置 LED 颜色（红色 / 黄色）                          |
| 12    | 设置 LED 是否闪烁（闪烁 / 常亮）                      |
| 13    | 设置 LED 亮度（500 ~ 7000）                           |
| 14    | 设备开关控制（0/1）                           |
| 20    | 设置为"车辆通过"状态：红色 + 亮度7000 + 120Hz         |
| 21    | 设置为"车辆离开"状态：黄色 + 亮度1000 + 常亮         |

---

## 指令格式说明

### fPort = 10：设置闪烁频率

**Payload 格式**

[ 频率值 (1 Byte) ]

**频率参数**

| 频率 | 十六进制值 |
|------|------------|
| 30Hz | `0x1E`     |
| 60Hz | `0x3C`     |
| 120Hz| `0x78`     |

**示例**

设置闪烁频率为 60Hz：

- `fPort=10`
- `payload=3C`

---

### fPort = 11：设置 LED 颜色

**Payload 格式**

[ 颜色值 (1 Byte) ]

**颜色参数**

| 颜色   | 值   |
|--------|------|
| 红色   | 0x00 |
| 黄色   | 0x01 |

**示例**

设置为黄色：

- `fPort=11`
- `payload=01`

---

### fPort = 12：设置是否闪烁

**Payload 格式**

[ 状态值 (1 Byte) ]

**闪烁控制参数**

| 状态   | 值   |
|--------|------|
| 闪烁   | 0x00 |
| 常亮   | 0x01 |

**示例**

设置为常亮：

- `fPort=12`
- `payload=01`

---

### fPort = 13：设置亮度

**Payload 格式**

[ 高字节 ][ 低字节 ]

**亮度参数（big-endian）**

| 亮度值 | 十六进制     |
|--------|--------------|
| 500    | `01 F4`      |
| 1000   | `03 E8`      |
| 2000   | `07 D0`      |
| 4000   | `0F A0`      |
| 7000   | `1B 58`      |

**示例**

设置亮度为 7000：

- `fPort=13`
- `payload=1B 58`

---
### fPort = 14：设备开关控制

**Payload 格式**

[ 状态值 (1 Byte) ]

**状态参数**

| 状态 | 十六进制值 |
|------|------------|
| 开启 | `0x01`     |
| 关闭 | `0x00`     |

**示例**

开启设备：

- `fPort=14`
- `payload=01`

## 延迟测量协议

**上行请求格式**
- `payload` 格式：[ 命令码 (0x06) ][ 时间戳（可选） ]
- 时间戳：建议添加时间戳，便于计算往返时间

**下行响应格式**
- `fPort=1`
- `payload` 格式：[ 命令码 (0x06) ]

**工作流程**
1. 终端发送带有命令码0x06的上行数据到服务器
2. 服务器收到数据后立即发送相同命令码的下行响应
3. 终端计算从发送到收到响应的时间差，即为通信延迟

**示例**
- 终端发送：`payload=06 [时间戳]`
- 服务器响应：`fPort=1, payload=06`

## 报警响应协议

### 人工报警
**上行请求格式**
- `payload` 格式：[ 命令码 (0x07) ]
- 说明：当有人按下终端设备的报警按钮时发送

**示例**
- 终端发送：`payload=07`

### 事故报警
**上行请求格式**
- `payload` 格式：[ 命令码 (0x08) ]
- 说明：当终端设备检测到事故时发送

**示例**
- 终端发送：`payload=08`

## 组合控制命令

### fPort = 20：车辆通过状态

终端执行：

- 设置颜色为红色
- 设置亮度为 7000
- 设置闪烁频率为 120Hz

**Payload：空**

- `fPort=20`
- `payload=`（无）

---

### fPort = 21：车辆离开状态

终端执行：

- 设置颜色为红色
- 设置亮度为 1000
- 设置为常亮

**Payload：空**

- `fPort=21`
- `payload=`（无）

---

## IP与设备映射配置

设备与IP的对应关系通过`ip_devices.json`配置文件进行管理，格式如下：

```json
{
    "192.168.1.1": [
        "1100000000000001",
        "1100000000000002",
        "1100000000000003"
    ]
}
```

当使用IP参数进行组播控制时，系统会自动控制该IP下配置的所有设备。

---
